/*
 * Copyright (c) 2017-2019 TIBCO Software Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you
 * may not use this file except in compliance with the License. You
 * may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License. See accompanying
 * LICENSE file.
 */

sourceSets.main.java {
  // requires WebLogic jars
  exclude 'sql/ecotests/wls/**'
  // tpce app is not in main compilation unit
  exclude 'sql/ecotests/tpce/implementation/**'
}

// need to exclude specificially in IDEA
idea {
  module {
    excludeDirs += file('src/main/java/sql/ecotests/wls')
    excludeDirs += file('src/main/java/sql/ecotests/tpce/implementation')
  }
}

ext {
  createdBy = System.getProperty('user.name')
  derbyOldVersion = '10.8.2.2'
}

dependencies {
  compileOnly project(subprojectBase + 'gemfire-core')
  compile project(subprojectBase + 'gemfire-tests')
  compile project(subprojectBase + 'snappydata-store-client')
  compileOnly project(subprojectBase + 'snappydata-store-tools')
  compileOnly project(subprojectBase + 'snappydata-store-core')

  compileOnly "org.apache.hadoop:hadoop-annotations:${hadoopVersion}"
  compileOnly "org.apache.hadoop:hadoop-auth:${hadoopVersion}"
  compileOnly "org.apache.hadoop:hadoop-common:${hadoopVersion}"
  compileOnly "org.apache.hadoop:hadoop-hdfs:${hadoopVersion}"
  compileOnly "org.apache.hadoop:hadoop-mapreduce-client-core:${hadoopVersion}"
  compileOnly "com.google.protobuf:protobuf-java:${protobufVersion}"
  compileOnly "org.glassfish.jersey.core:jersey-server:${jerseyVersion}"
  compileOnly "org.glassfish.jersey.containers:jersey-container-servlet-core:${jerseyVersion}"
  compileOnly "org.eclipse.jetty:jetty-server:${jettyVersion}"
  compileOnly "org.eclipse.jetty:jetty-util:${jettyVersion}"
  compileOnly "com.google.code.findbugs:jsr305:${jsr305Version}"

  compileOnly "org.springframework:spring-aop:${springVersion}"
  compileOnly "org.springframework:spring-beans:${springVersion}"
  compileOnly "org.springframework:spring-context:${springVersion}"
  compileOnly "org.springframework:spring-context-support:${springVersion}"
  compileOnly "org.springframework:spring-core:${springVersion}"
  compileOnly "org.springframework:spring-expression:${springVersion}"
  compileOnly "org.springframework:spring-web:${springVersion}"
  compileOnly "org.springframework:spring-webmvc:${springVersion}"
  compileOnly "org.springframework:spring-tx:${springVersion}"

  compile "org.apache.hbase:hbase-common:${hbaseVersion}"
  compile "org.apache.hbase:hbase-protocol:${hbaseVersion}"
  compile "org.apache.hbase:hbase-client:${hbaseVersion}"
  compile "org.apache.hbase:hbase-server:${hbaseVersion}"
  compile "com.sun.jersey:jersey-core:${sunJerseyVersion}"
  compile "com.sun.jersey:jersey-server:${sunJerseyVersion}"
  compile "com.sun.jersey:jersey-servlet:${sunJerseyVersion}"
  compile "org.mortbay.jetty:jetty:${hadoopJettyVersion}"
  compile "org.mortbay.jetty:jetty-util:${hadoopJettyVersion}"
  compile "org.mortbay.jetty:jetty-sslengine:${hadoopJettyVersion}"
  compile "org.cloudera.htrace:htrace-core:${clouderaHtraceVersion}"

  compile "com.googlecode.json-simple:json-simple:${jsonSimpleVersion}"
  compile "org.hibernate.javax.persistence:hibernate-jpa-2.1-api:${hibernateJpaVersion}"
  compile "javax.ejb:javax.ejb-api:${ejbVersion}"
  compile "org.apache.tomcat:tomcat-juli:${tomcatJdbcVersion}"
  compile "org.apache.tomcat:tomcat-jdbc:${tomcatJdbcVersion}"
  compile "com.mchange:c3p0:${c3p0Version}"
  compile "org.apache.derby:derbytools:${derbyVersion}"
  runtime "org.apache.derby:derby:${derbyVersion}"
  runtime "org.apache.derby:derbynet:${derbyVersion}"
  runtime "org.apache.derby:derbyclient:${derbyVersion}"
  runtime "org.apache.thrift:libthrift:${thriftVersion}"
  runtime "com.esotericsoftware:kryo-shaded:${kryoVersion}"
}

// apply default manifest
if (rootProject.hasProperty('enablePublish')) {
  createdBy = vendorName
}
shadowJar {
  zip64 = true

  mergeServiceFiles()

  manifest {
    attributes(
      'Manifest-Version'  : '1.0',
      'Created-By'        : createdBy,
      'Title'             : rootProject.name,
      'Version'           : version,
      'Vendor'            : 'Pivotal Software, Inc.'
    )
  }
}

archivesBaseName = 'snappydata-store-hydra-tests'
jar.dependsOn shadowJar
