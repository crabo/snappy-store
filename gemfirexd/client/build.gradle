/*
 * Copyright (c) 2017-2019 TIBCO Software Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you
 * may not use this file except in compliance with the License. You
 * may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License. See accompanying
 * LICENSE file.
 */

dependencies {
  compile "org.apache.thrift:libthrift:${thriftVersion}"
  compile "net.java.dev.jna:jna:${jnaVersion}"

  compile project(subprojectBase + 'snappydata-store-shared')
  compile "org.apache.tomcat:tomcat-juli:${tomcatJdbcVersion}"
  compile "org.apache.tomcat:tomcat-jdbc:${tomcatJdbcVersion}"
}

task generatePropertiesFiles(dependsOn: 'processResources') {
  def infoDir = file("${sourceSets.main.java.outputDir}/com/pivotal/gemfirexd/internal/info")
  outputs.files "${infoDir}/dnc.properties", "${infoDir}/thrift.properties"
  inputs.dir "${projectDir}/../core/src/main/resources/com/pivotal/gemfirexd/internal/info"

  doLast {
    println('Creating DRDA client properties')
    derbyProps.put('gemfirexd.product.technology.name', "${DERBY_NAME} Network Client")
    derbyProps.put('gemfirexd.product.file', 'snappydata-store-client.jar')
    writeProperties(infoDir, 'dnc.properties', COPYRIGHT, derbyProps)

    println('Creating Thrift client properties')
    writeProperties(infoDir, 'thrift.properties', COPYRIGHT, [
        'gemfirexd.version.major'           : PRODUCT_MAJOR,
        'gemfirexd.version.minor'           : PRODUCT_MINOR,
        'gemfirexd.version.maint'           : PRODUCT_MAINT,
        'gemfirexd.build.number'            : '1',
        'gemfirexd.product.technology.name' : "${PRODUCT_NAME} Thrift Server",
        'gemfirexd.product.external.name'   : PRODUCT_NAME,
        'gemfirexd.product.external.version': PRODUCT_VERSION,
        'gemfirexd.version.beta'            : 'true',
        'gemfirexd.product.vendor'          : PRODUCT_VENDOR,
        'gemfirexd.product.file'            : 'snappydata-store-client.jar'])
  }
}

compileJava {
  dependsOn generatePropertiesFiles
}

archivesBaseName = 'snappydata-store-client'

jar {
  dependsOn subprojectBase + 'snappydata-store-core:doSplit'
  baseName = 'snappydata-store-client'
  manifest {
    attributes = getManifest('gemfirexdclient', '*',
        'io.snappydata.jdbc', [])
  }

  doFirst {
    generateCommonManifest(projectDir, buildDir)
  }
}

shadowJar {
  dependsOn jar
  baseName = 'snappydata-client'
  classifier = ''
  // avoid conflict with older incompatible thrift versions in classpath
  relocate 'org.apache.thrift', 'io.snappydata.org.apache.thrift'

  mergeServiceFiles()
}
